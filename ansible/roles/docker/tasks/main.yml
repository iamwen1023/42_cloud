---
- name: Find existing Docker apt source files (*.list, *.sources)
  find:
    paths: /etc/apt/sources.list.d
    patterns: '*docker*'
    file_type: file
  register: docker_source_files

- name: Purge any existing Docker apt source files (*.list, *.sources)
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ docker_source_files.files }}"
  loop_control:
    label: "{{ item.path }}"

- name: Remove any Docker entries from main sources.list
  lineinfile:
    path: /etc/apt/sources.list
    regexp: '^deb .*download\.docker\.com/linux/ubuntu'
    state: absent

- name: Install prerequisite packages
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-pip
    state: present
    update_cache: yes

- name: Install Docker Engine repository key
  shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker apt repository (with signed-by)
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    state: present
    update_cache: yes

- name: Install Docker engine
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: yes
    state: present

- name: Install docker-compose (fallback pip if plugin not available)
  pip:
    name: docker-compose
  when: ansible_distribution_release == 'focal'